# Generated by Django 5.0.3 on 2024-06-11 07:12

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Zadejte název organizace', max_length=255, verbose_name='Název organizace')),
                ('address', models.TextField(help_text='Zadejte adresu organizace', verbose_name='Adresa')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Datum vytvoření')),
            ],
            options={
                'verbose_name': 'Organizace',
                'verbose_name_plural': 'Organizace',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Zadejte e-mail uživatele', max_length=254, unique=True, verbose_name='E-mail')),
                ('telephone', models.CharField(blank=True, help_text='Zadejte telefonní číslo uživatele', max_length=20, null=True, verbose_name='Telefonní číslo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('organization', models.ForeignKey(blank=True, help_text='Vyberte organizaci uživatele', null=True, on_delete=django.db.models.deletion.CASCADE, to='eventify_app.organization', verbose_name='Organizace')),
            ],
            options={
                'verbose_name': 'Uživatel',
                'verbose_name_plural': 'Uživatelé',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Zadejte název události', max_length=200, verbose_name='Název události')),
                ('description', models.TextField(help_text='Zadejte popis události', verbose_name='Popis události')),
                ('day', models.DateField(default=django.utils.timezone.now, help_text='Zadejte den konání eventu', verbose_name='Den konání eventu')),
                ('start_time', models.TimeField(default=datetime.datetime(2024, 6, 11, 7, 12, 15, 18486, tzinfo=datetime.timezone.utc), help_text='Zadejte čas začátku eventu', verbose_name='Čas začátku eventu')),
                ('end_time', models.TimeField(default=datetime.datetime(2024, 6, 11, 7, 12, 15, 18486, tzinfo=datetime.timezone.utc), help_text='Zadejte čas konce eventu', verbose_name='Čas konce eventu')),
                ('seats', models.PositiveIntegerField(help_text='Zadejte počet dostupných míst', verbose_name='Počet míst')),
                ('image', models.ImageField(blank=True, help_text='Vyberte obrázek pro událost', null=True, upload_to='event_images/', verbose_name='Obrázek události')),
                ('created_by', models.ForeignKey(help_text='Vyberte uživatele, který událost vytvořil', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Vytvořeno uživatelem')),
                ('organization', models.ForeignKey(error_messages={'null': 'Nejsi v organizaci nemůžeš vytvořit event!'}, help_text='Vyberte organizaci', null=True, on_delete=django.db.models.deletion.CASCADE, to='eventify_app.organization', verbose_name='Organizace')),
            ],
            options={
                'verbose_name': 'Událost',
                'verbose_name_plural': 'Události',
            },
        ),
        migrations.CreateModel(
            name='UserEventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_registered', models.DateTimeField(auto_now_add=True, verbose_name='Datum registrace')),
                ('event', models.ForeignKey(help_text='Vyberte událost, na kterou se uživatel registruje', on_delete=django.db.models.deletion.CASCADE, to='eventify_app.event', verbose_name='Událost')),
                ('user', models.ForeignKey(help_text='Vyberte uživatele, který se zúčastní události', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Uživatel')),
            ],
            options={
                'verbose_name': 'Registrace uživatele na událost',
                'verbose_name_plural': 'Registrace uživatelů na události',
                'unique_together': {('user', 'event')},
            },
        ),
    ]
